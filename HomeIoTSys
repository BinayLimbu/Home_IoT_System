#include "DHT.h"

#define DHTPIN 3      //input pin for temp sensor
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
int Gas_analog = 15;    //input pin for analogue gas sensor (threshold for action)
int Gas_digital = 4;    //input pin for digital gas sensor (collecting readings)

#void setup() {
  Serial.begin(115200);    //DHT operates on 9600 but MQ2 can operate only at 115200 so using higher baud rate
  pinMode(Gas_digital, INPUT);
  pinMode (LED_BUILTIN, OUTPUT);   //temporary output until actuator arm part arrives
  dht.begin();
}

void loop() {
  delay(500);  //delay at loop start to work synonymously 
  
  //Temp sensor reading
  float h = dht.readHumidity();
  // Read temperature as Celsius 
  float t = dht.readTemperature();
  // Check if any reads failed and exit early (to try again).
  if (isnan(t) || isnan(h)) {      //refining of the code as f (farenheight) values unnecessary for the task although humidity arguably is too 
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
  
  // Compute heat index in Celsius    //default temp values in celsius
  float hic = dht.computeHeatIndex(t);

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F ("°C "));
  Serial.println(F("Heat index: "));   //the apparent temperature (taking into account humidity)
  Serial.print(hic);
  Serial.print(F("°C "));
  
  //Window actions based on room temp - can use hic value instead and need to come up with an override method for gas presence to keep window open despite cold
  if (t > 15 and t < 22) {
    Serial.println("Room temperature balanced. Window closed.");
    digitalWrite(LED_BUILTIN, LOW);
  }
  if (t > 22) {
    Serial.println("Room too hot. Opening window.");
    digitalWrite(LED_BUILTIN, HIGH);
  }
  if (t < 15) {
    Serial.println("Room too cold. Closing window.");
    digitalWrite(LED_BUILTIN, LOW);
  }
}
